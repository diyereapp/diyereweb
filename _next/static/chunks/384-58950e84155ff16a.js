!function(){try{var n="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},e=(new n.Error).stack;e&&(n._sentryDebugIds=n._sentryDebugIds||{},n._sentryDebugIds[e]="b39626a2-217c-4954-a69f-5ab2a2ea3359",n._sentryDebugIdIdentifier="sentry-dbid-b39626a2-217c-4954-a69f-5ab2a2ea3359")}catch(n){}}();"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[384],{14185:(n,e,t)=>{t.d(e,{$u:()=>s,Ui:()=>c,kk:()=>p,n4:()=>o});var a,i,l=t(14232),r=t(87282),o=function(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}(function(){if(i)return a;i=1;var n="u">typeof Element,e="function"==typeof Map,t="function"==typeof Set,l="function"==typeof ArrayBuffer&&!!ArrayBuffer.isView;return a=function(a,i){try{return function a(i,r){if(i===r)return!0;if(i&&r&&"object"==typeof i&&"object"==typeof r){var o,c,p,s;if(i.constructor!==r.constructor)return!1;if(Array.isArray(i)){if((o=i.length)!=r.length)return!1;for(c=o;0!=c--;)if(!a(i[c],r[c]))return!1;return!0}if(e&&i instanceof Map&&r instanceof Map){if(i.size!==r.size)return!1;for(s=i.entries();!(c=s.next()).done;)if(!r.has(c.value[0]))return!1;for(s=i.entries();!(c=s.next()).done;)if(!a(c.value[1],r.get(c.value[0])))return!1;return!0}if(t&&i instanceof Set&&r instanceof Set){if(i.size!==r.size)return!1;for(s=i.entries();!(c=s.next()).done;)if(!r.has(c.value[0]))return!1;return!0}if(l&&ArrayBuffer.isView(i)&&ArrayBuffer.isView(r)){if((o=i.length)!=r.length)return!1;for(c=o;0!=c--;)if(i[c]!==r[c])return!1;return!0}if(i.constructor===RegExp)return i.source===r.source&&i.flags===r.flags;if(i.valueOf!==Object.prototype.valueOf&&"function"==typeof i.valueOf&&"function"==typeof r.valueOf)return i.valueOf()===r.valueOf();if(i.toString!==Object.prototype.toString&&"function"==typeof i.toString&&"function"==typeof r.toString)return i.toString()===r.toString();if((o=(p=Object.keys(i)).length)!==Object.keys(r).length)return!1;for(c=o;0!=c--;)if(!Object.prototype.hasOwnProperty.call(r,p[c]))return!1;if(n&&i instanceof Element)return!1;for(c=o;0!=c--;)if(!(("_owner"===p[c]||"__v"===p[c]||"__o"===p[c])&&i.$$typeof)&&!a(i[p[c]],r[p[c]]))return!1;return!0}return i!=i&&r!=r}(a,i)}catch(n){if((n.message||"").match(/stack|recursion/i))return console.warn("react-fast-compare cannot handle circular refs"),!1;throw n}}}());let c=(0,l.createContext)(null);function p(n,e,t,a){let{isEqual:i=o}=a||{},p=(0,l.useContext)(c),s=function(n){let e=(0,l.useMemo)(()=>JSON.stringify(n||{}),[n]);return(0,l.useMemo)(()=>JSON.parse(e),[e])}(t),d=(0,l.useMemo)(()=>({subscribe:()=>()=>{},getSnapshot:()=>n}),[n]),u=(0,l.useMemo)(()=>p?.(n,e,s)||{subscribe:()=>()=>{},getSnapshot:()=>n},[p,n,s,e]),[g]=(0,l.useState)(()=>{if(void 0===n)throw Error("initialSnapshot can't be undefined, if you don't want an initial value use null instead");try{return JSON.parse(JSON.stringify(n))}catch(e){return console.warn("Failed to deep clone initialSnapshot, this is likely an error and an indication that the snapshot isn't JSON serializable",{initialSnapshot:n,error:e}),n}}),_=(0,l.useCallback)(()=>g,[g]),f=(0,l.useCallback)(n=>n,[]),m=(0,r.useSyncExternalStoreWithSelector)(u?.subscribe||d.subscribe,u?.getSnapshot||d.getSnapshot,_,f,i),y=null!==p;return[m,y&&g===m,y]}function s(){let[n,e]=(0,l.useState)(!1);(0,l.useEffect)(()=>{e(navigator.onLine);let n=()=>e(!0),t=()=>e(!1);return window.addEventListener("online",n),window.addEventListener("offline",t),()=>{window.removeEventListener("online",n),window.removeEventListener("offline",t)}},[]);let t=(0,l.useSyncExternalStore)(d,()=>document.visibilityState,()=>"hidden");return!n||"hidden"===t}function d(n){return document.addEventListener("visibilitychange",n),()=>document.removeEventListener("visibilitychange",n)}},24802:(n,e,t)=>{var a=t(14232),i="function"==typeof Object.is?Object.is:function(n,e){return n===e&&(0!==n||1/n==1/e)||n!=n&&e!=e},l=a.useSyncExternalStore,r=a.useRef,o=a.useEffect,c=a.useMemo,p=a.useDebugValue;e.useSyncExternalStoreWithSelector=function(n,e,t,a,s){var d=r(null);if(null===d.current){var u={hasValue:!1,value:null};d.current=u}else u=d.current;var g=l(n,(d=c(function(){function n(n){if(!o){if(o=!0,l=n,n=a(n),void 0!==s&&u.hasValue){var e=u.value;if(s(e,n))return r=e}return r=n}if(e=r,i(l,n))return e;var t=a(n);return void 0!==s&&s(e,t)?(l=n,e):(l=n,r=t)}var l,r,o=!1,c=void 0===t?null:t;return[function(){return n(e())},null===c?void 0:function(){return n(c())}]},[e,t,a,s]))[0],d[1]);return o(function(){u.hasValue=!0,u.value=g},[g]),p(g),g}},87282:(n,e,t)=>{n.exports=t(24802)},92542:(n,e,t)=>{t.d(e,{ZN:()=>o,p9:()=>r});let a="{\n    ...,\n    _type,\n    _type == 'image' => {\n      asset->".concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n      crop,\n      hotspot\n    },\n    _type == \'video\' => {\n      ...,\n    },\n    _type == \'block\' => {\n      ...,\n      markDefs[]{\n        ...,\n        _type == \'internalLink\' => {\n          "href": link->pageData.slug.current,\n        },\n        _type == "externalLink" => {\n          href,\n          openInNewTab,\n          noReferrer,\n          noFollow\n        },\n        _type == \'designLink\' => {\n          "href": link->pageData.slug.current,\n          "item": product->linkedProduct.id,\n          "color": productVariant->variantColor->printflyReference.id,\n          "method": printMethod,\n        },\n      }\n    },\n  }'),i='\n*[_type == \'siteConfiguration\' && brand == \'rush-order-tees\'][0]{\n  "siteSettings": {\n    "siteReviews": coalesce(siteReviews{\n      "averageScore": coalesce(averageScore, 0),\n      "totalReviews": coalesce(totalReviews, 0),\n    }, {\n      "averageScore": 0,\n      "totalReviews": 0,\n    }),\n    promos,\n  },\n  "siteHeader": header{\n    logo{\n      asset->'.concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",",\n      crop,\n      hotspot\n    },\n    callToAction[0]").concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',",\n    navigationMenus[]{\n      _key,\n        _type,\n        _type == 'imageGridMenu' => {\n          title[0]").concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',",\n          links[]{\n            _key,\n            image{\n              asset->").concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",",\n              crop,\n              hotspot\n            },\n            target[0]").concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',"\n          }\n        },\n        _type == 'columnMenu' => {\n          title[0]").concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',",\n          columns[]{\n            _key,\n            columnGroups[]{\n              _key,\n              groupTitle[0]").concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',",\n              groupLinks[]{\n                _key,\n                link[0]").concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',",\n                badge\n              }\n            }\n          }\n        },\n        _type == 'featuredItemsMenu' => {\n          title[0]").concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',",\n          columns[]{\n            _key,\n            columnGroups[]{\n              _key,\n              groupTitle[0]").concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',",\n              groupLinks[]{\n                _key,\n                link[0]").concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',",\n                badge\n              }\n            }\n          },\n          featuredLinks[]{\n            _key,\n            imageOverride{\n              asset->").concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n              crop,\n              hotspot\n            },\n            "featuredLink": featuredLink->{\n              _type,\n              "title": coalesce(pageData.altTitle, pageData.title),\n              "slug": pageData.slug.current,\n              "previewImage": pageData.previewImage{\n                asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n                crop,\n                hotspot\n              }\n            }\n          },\n          featuredLinksPosition\n        }\n    },\n  },\n  "siteFooter": footer{\n    logo{\n      asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",",\n      crop,\n      hotspot\n    },\n    navigationMenus[]{\n      _key,\n      title[0]").concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',",\n      links[]{\n        _key,\n        target[0]").concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',",\n        image{\n          asset->").concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",",\n          crop,\n          hotspot\n        },\n      }\n    },\n    socialLinks[]{\n      _key,\n      image{\n        asset->").concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",",\n        crop,\n        hotspot\n      },\n      target[0]").concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',"\n    },\n    utilityLinks[]{\n      _key,\n      target[0]").concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',"\n    }\n  },\n}\n"),l='{\n  _type,\n  _key,\n  _type == "aiPromptGeneratorComponent" => {\n    title,\n    description,\n    placeholderImages[]{\n      _key,\n      asset->'.concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n      crop,\n      hotspot\n    },\n    "suggestions": *[_type == "aiPromptSuggestion" ][].text,\n    "callToAction": {\n      "product": designStudioLink.product->{\n        "item": linkedProduct.id,\n        "colors": *[_type==\'productVariant\' && references(^._id)].variantColor->{\n          "id": printflyReference.id,\n          "hex": coalesce(printflyReference.palette[0], \'#000000\'),\n        },\n      },\n      "title": designStudioLink.title,\n      "method": coalesce(designStudioLink.product->decorationMethods[0].decorationMethod->designStudioReference, \'scr\'),\n      "designTemplate": coalesce(designStudioLink.product->templateId, \'\'),\n    }\n  },\n  _type == "blogPostPreviewComponent" => {\n    title,\n    blogPostPreviews[]{\n      _key,\n      "href": blogPost->pageData.slug.current,\n      "title": coalesce(titleOverride, blogPost->pageData.altTitle, "MISSING_TITLE"),\n      "description": coalesce(descriptionOverride, blogPost->pageData.description, "MISSING_DESCRIPTION"),\n      "image":coalesce(\n        imageOverride{\n          asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",",\n          crop,\n          hotspot\n        }, \n        blogPost->pageData.previewImage{\n          asset->").concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n          crop,\n          hotspot\n        })\n    }\n\n  },\n  _type == "heroPanelComponent" => {\n    title,\n    description,\n    image{\n      asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n      crop,\n      hotspot\n    },\n    links[]{\n      _key,\n      "title": coalesce(title, target->pageData.altTitle, "MISSING_TITLE"),\n      "slug": coalesce(target->pageData.slug.current, \'TEMPORARY-URL\'),\n    },\n    productReference->{\n      "productId": linkedProduct.id\n    },\n    decorationMethod->{\n      "designStudioReference": designStudioReference\n    }\n  },\n  _type == "brandHighlightsComponent" => {\n    "componentData": *[\n      _type == "siteConfiguration" && \n      brand == "rush-order-tees"\n    ][0].brandHighlightsData[variant == ^.variant][0]\n  },\n  _type == "imageCallToActionComponent" => {\n    _type,\n    title,\n    subtitle,\n    action{\n      "title": coalesce(title, target->pageData.altTitle, "MISSING_TITLE"),\n      "slug": coalesce(target->pageData.slug.current, \'#\'),\n    },\n    image{\n      asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n      crop,\n      hotspot\n    }\n  },\n  _type == "imageOverlayListComponent" => {\n    _type,\n    title,\n    subtitle,\n    links[]{\n      _key,\n      "title": coalesce(title, target->pageData.altTitle, "MISSING_TITLE"),\n      "slug": coalesce(target->pageData.slug.current, \'TEMPORARY-URL\'),\n      image{\n        asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n        crop,\n        hotspot\n      }\n    }\n  },\n  _type == "imageActionListComponent" => {\n    _type,\n    title,\n    subtitle,\n    action{\n      title,\n      "slug": coalesce(target->pageData.slug.current, \'#\'),\n    },\n    gridItems[]{\n      _key,\n      "title": coalesce(target->pageData.altTitle, "MISSING_TITLE"),\n      "slug": coalesce(target->pageData.slug.current, \'TEMPORARY-URL\'),\n      image{\n        asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n        crop,\n        hotspot\n      }\n    }\n  },\n  _type == "imageLinkGridComponent" => {\n    _type,\n    title,\n    subtitle,\n    gridItems[]{\n      _key,\n      "title": coalesce(title, target->pageData.altTitle, "MISSING_TITLE"),\n      "slug": coalesce(target->pageData.slug.current, \'TEMPORARY-URL\'),\n      colorHex,\n      image{\n        asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n        crop,\n        hotspot\n      }\n    }\n  },\n  _type == "productCardShowcaseComponent" => {\n    _type,\n    title,\n    subtitle,\n    products[] {\n      _key,\n      badge,\n      "productDetails":product->{\n        "brand": linkedProduct.brand,\n        "publishedAt": coalesce(publishedAt, "MISSING_PUBLISHED_AT"),\n        "title": coalesce(pageData.altTitle, pageData.title),\n        "slug": coalesce(pageData.slug.current, \'TEMPORARY-URL\'),\n        "style": linkedProduct.style,\n        "template": templateId,\n        "averageScore": coalesce(productReviews.averageScore, 0),\n        "totalReviews": coalesce(productReviews.totalReviews, 0),\n        "minimumQuantity": math::min(decorationMethods[].minimumQuantity),\n        "sizeRange": ').concat('{\n    "smallest": defaultVariant->variantSizes[0].size->{\n      _id,\n      name\n    },\n    "largest": defaultVariant->variantSizes[-1].size->{\n      _id,\n      name\n    }\n  }',',\n        "priceQuotes": coalesce(priceQuotes, [])\n      },\n      "selectedColorCode": productVariant->variantColor->printflyReference.code,\n    }\n  },\n  _type == "trustBuilderComponent" => {\n    "componentData": *[\n      _type == "siteConfiguration" && \n      brand == "rush-order-tees"\n    ][0].brandHighlightsData[variant == \'trust-builder\'][0]\n  },\n  _type == "videoComponent" => {\n    title,\n    video\n  },\n  _type == "linkComponent" => {\n    title,\n    variant,\n    links[]{\n      _key,\n      _type,\n      _type == \'internalLink\' => {\n        title,\n        "href": link->pageData.slug.current,\n      },\n      _type == \'externalLink\' => {\n        title,\n        href,\n        openInNewTab,\n        noFollow,\n        noReferrer,\n      },\n    }\n  },\n  _type == "faqComponent" => {\n    title,\n    questionsAnswers[]{\n      _key,\n      question,\n      answer[]').concat(a,'\n    }\n  },\n  _type == "ctaTemplateComponent" => {\n    background,\n    subtitle,\n    alignment,\n    title,\n    callToAction[0]').concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',",\n    secondaryCallToAction[0]").concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',',\n    templates[]->{\n      "name": printflyReference.name,\n      "id": printflyReference.design.current\n    },\n  },\n  _type == "linkGridComponent" => {\n    title,\n    subtitle,\n    links[]{\n      _key,\n      title,\n      subtitle,\n      callToAction[0]').concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',',\n      "image": image{\n        asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n        crop,\n        hotspot\n      }\n    }\n  },\n  _type == "groupLinkDirectoryComponent" => {\n    title,\n    subtitle,\n    groups[]{\n      _key,\n      title[0]{\n        _type,\n        _type == \'internalLink\' => {\n          "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n          "href": link->pageData.slug.current,\n        },\n        _type == \'plainText\' => {\n          title\n        }\n      },\n      links[]{\n        _key,\n        _type,\n        title,\n        _type == \'internalLink\' => {\n          "href": link->pageData.slug.current,\n        }\n      }\n    }\n  },\n  _type == "allReviewsComponent" => {\n    title,\n    description[]').concat(a,',\n  },\n  _type == "yotpoImageGalleryComponent" => {\n    title,\n    subtitle,\n    galleryId\n  },\n  _type == "imageGalleryComponent" => {\n    title,\n    subtitle,\n    images[]{\n      _key,\n      asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n      crop,\n      hotspot\n    }\n  },\n  _type == "reviewsComponent" => {\n    title,\n    variant,\n    reviews[]\n  },\n  _type == "richTextComponent" => {\n    content[]').concat(a,'\n  },\n  _type == "helpCenterTextComponent" => {\n    content[]').concat(a,',\n    "helpCenterData": *[_type == \'siteConfiguration\' && brand == \'rush-order-tees\'][0].helpCenterData{\n      title,\n      groups[]{\n        _key,\n        groupTitle,\n        groupItems[]{\n          _key,\n          _type,\n          _type == \'designLink\' => {\n            "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n            "href": link->pageData.slug.current,\n            "item": product->linkedProduct.id,\n            "color": productVariant->variantColor->printflyReference.id,\n            "method": printMethod,\n          },\n          _type == \'internalLink\' => {\n            "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n            "href": link->pageData.slug.current,\n          },\n          _type == \'externalLink\' => {\n            "title": coalesce(title, "MISSING_TITLE"),\n            href,\n            openInNewTab,\n            noReferrer,\n            noFollow\n          },\n          _type == \'customAction\' => {\n            title,\n            action\n          },\n        }\n      }\n    }\n  },\n  _type == "headerComponent" => {\n    title,\n    subtitle,\n  },\n  _type == "augustaComponent" => {\n    title,\n    subtitle,\n    url,\n  },\n  _type == "templateCollectionComponent" => {\n    title,\n    subtitle,\n    templates[]->{\n      _id,\n      "title": coalesce(name, printflyReference.name),\n      "slug": "/design/", // Hardcoded for now\n      "template": printflyReference.design.current\n    }\n  },\n  _type == "supplementaryTemplateCollectionComponent" => {\n    title,\n    subtitle,\n    templates[]->{\n      _id,\n      "title": coalesce(name, printflyReference.name),\n      "slug": "/design/", // Hardcoded for now\n      "template": printflyReference.design.current\n    },\n    callToAction[0]').concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',',\n  },\n  _type == "pageCollectionComponent" => {\n    title,\n    subtitle,\n    pages[]->{\n      _id,\n      "title": coalesce(pageData.altTitle, pageData.title),\n      "slug": coalesce(pageData.slug.current, \'TEMPORARY-URL\'),\n      "image": pageData.previewImage{\n        asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n        crop,\n        hotspot\n      }\n    }\n  },\n  _type == "tabbedPageShowcaseComponent" => {\n    alignment,\n    title,\n    subtitle,\n    tabs[]{\n      _key,\n      title,\n      callToAction[0]').concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',',\n      pages[count(coalesce(@->pageData.excludedSites, [])[@ == \'rush-order-tees\']) == 0]->{\n        _type,\n        _type == "page" => {\n          _id,\n          "title": coalesce(pageData.altTitle, pageData.title),\n          "slug": coalesce(pageData.slug.current, \'TEMPORARY-URL\'),\n          "image": pageData.previewImage{\n            asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n            crop,\n            hotspot\n          }\n        },\n        _type == "product" => {\n          _id,\n          primaryBadge,\n          secondaryBadge,\n          "publishedAt": coalesce(publishedAt, "MISSING_PUBLISHED_AT"),\n          "title": coalesce(pageData.altTitle, pageData.title),\n          "slug": coalesce(pageData.slug.current, \'TEMPORARY-URL\'),\n          "style": linkedProduct.style,\n          "defaultColorCode": defaultVariant->variantColor->printflyReference.code,\n          "template": templateId,\n          "averageScore": coalesce(productReviews.averageScore, 0),\n          "totalReviews": coalesce(productReviews.totalReviews, 0),\n          "minimumQuantity": coalesce(decorationMethods[0].minimumQuantity, 0),\n          "sizeRange": ').concat('{\n    "smallest": defaultVariant->variantSizes[0].size->{\n      _id,\n      name\n    },\n    "largest": defaultVariant->variantSizes[-1].size->{\n      _id,\n      name\n    }\n  }',',\n          "productColors": *[_type==\'productVariant\' && references(^._id)].variantColor->{\n            "id": _id,\n            "code": printflyReference.code,\n            "palette": printflyReference.palette,\n            "name": printflyReference.name\n          },\n          "featuredProductColors": featuredVariants[]->{\n            "id": _id,\n            "code": variantColor->printflyReference.code,\n            "palette": variantColor->printflyReference.palette,\n            "name": variantColor->printflyReference.name\n          },\n          "priceQuotes": coalesce(priceQuotes, [])\n        }\n      }\n    }\n  },\n  _type == "supplementaryPageCollectionComponent" => {\n    title,\n    subtitle,\n    layout,\n    pages[]->{\n      _id,\n      "title": coalesce(pageData.altTitle, pageData.title),\n      "slug": coalesce(pageData.slug.current, \'TEMPORARY-URL\'),\n      "image": pageData.previewImage{\n        asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",",\n        crop,\n        hotspot\n      }\n    },\n    callToAction[0]").concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',',\n  },\n  _type == "productCollectionComponent" => {\n    "allProductFacets": *[\n      _type == \'productFacet\'\n    ]{\n      title,\n      "slug": slug.current,\n      ordinal,\n      optionsSortOrder,\n      "id": _id,\n      "allowMultipleOptions": coalesce(allowMultipleOptions, false),\n      "options": *[\n        _type == \'productFacetOption\' && \n        references(^._id)\n      ]{\n        "id": _id,\n        ordinal,\n        title,\n        "slug": slug.current,\n        color {\n          hex,\n         "image": image{\n            asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n            crop,\n            hotspot\n          },\n          tolerance\n        },\n      }\n    },\n    title,\n    subtitle,\n    "featuredPages": featuredPages[]{\n      _key,\n      "title": coalesce(title, page->pageData.altTitle, "MISSING_TITLE"),\n      "slug": page->pageData.slug.current,\n      "image": coalesce(image{\n          asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",",\n          crop,\n          hotspot\n        }, page->pageData.previewImage{\n        asset->").concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n        crop,\n        hotspot\n      })\n    },\n    "featuredProductFacets": coalesce(\n      featuredProductFacets[]->slug.current,\n      ["brand", "color", "price"]\n    ),\n    "featuredProductFacetOptions": featuredProductFacetOptions[]->{\n      "id": _id,\n      title,\n      "facetSlug": productFacet->slug.current,\n      "facetOptionSlug": slug.current,\n      color {\n        hex,\n        "image": image{\n          asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n          crop,\n          hotspot\n        }\n      },\n    },\n    products[count(coalesce(@->pageData.excludedSites, [])[@ == \'rush-order-tees\']) == 0]->{\n      _id,\n      productType,\n      primaryBadge,\n      secondaryBadge,\n      description,\n      "brand": linkedProduct.brand,\n      relatedProducts[count(coalesce(@->pageData.excludedSites, [])[@ == \'rush-order-tees\']) == 0]->{\n        _id,\n        "title": coalesce(pageData.altTitle, "MISSING_PRODUCT_TITLE"),\n        "slug": pageData.slug.current,\n      },\n      "publishedAt": coalesce(publishedAt, "MISSING_PUBLISHED_AT"),\n      "productFacets": productFacets[]._ref,\n      "title": coalesce(pageData.altTitle, pageData.title),\n      "slug": coalesce(pageData.slug.current, \'TEMPORARY-URL\'),\n      "style": linkedProduct.style,\n      "defaultColorCode": defaultVariant->variantColor->printflyReference.code,\n      "template": templateId,\n      "averageScore": coalesce(productReviews.averageScore, 0),\n      "totalReviews": coalesce(productReviews.totalReviews, 0),\n      "minimumQuantity": math::min(decorationMethods[].minimumQuantity),\n      "sizeRange": ').concat('{\n    "smallest": defaultVariant->variantSizes[0].size->{\n      _id,\n      name\n    },\n    "largest": defaultVariant->variantSizes[-1].size->{\n      _id,\n      name\n    }\n  }',',\n      priceEstimate,\n      "createdAt": _createdAt,\n      "productColors": *[_type==\'productVariant\' && enabled == true && references(^._id)].variantColor->{\n        "id": _id,\n        "code": printflyReference.code,\n        "palette": printflyReference.palette,\n        "name": printflyReference.name\n      },\n      "featuredProductColors": featuredVariants[0...7]->{\n        "id": _id,\n        "code": variantColor->printflyReference.code,\n        "palette": variantColor->printflyReference.palette,\n        "name": variantColor->printflyReference.name\n      },\n      "priceQuotes": coalesce(priceQuotes, [])\n    }\n  },\n  _type == "supplementaryProductCollectionComponent" => {\n    title,\n    subtitle,\n    products[count(coalesce(@->pageData.excludedSites, [])[@ == \'rush-order-tees\']) == 0]->{\n      _id,\n      primaryBadge,\n      secondaryBadge,\n      "publishedAt": coalesce(publishedAt, "MISSING_PUBLISHED_AT"),\n      "title": coalesce(pageData.altTitle, pageData.title),\n      "slug": coalesce(pageData.slug.current, \'TEMPORARY-URL\'),\n      "style": linkedProduct.style,\n      "defaultColorCode": defaultVariant->variantColor->printflyReference.code,\n      "template": templateId,\n      "averageScore": coalesce(productReviews.averageScore, 0),\n      "totalReviews": coalesce(productReviews.totalReviews, 0),\n      "minimumQuantity": math::min(decorationMethods[].minimumQuantity),\n      "sizeRange": ').concat('{\n    "smallest": defaultVariant->variantSizes[0].size->{\n      _id,\n      name\n    },\n    "largest": defaultVariant->variantSizes[-1].size->{\n      _id,\n      name\n    }\n  }',',\n      "productColors": *[_type==\'productVariant\' && references(^._id)].variantColor->{\n        "id": _id,\n        "code": printflyReference.code,\n        "palette": printflyReference.palette,\n        "name": printflyReference.name\n      },\n      "featuredProductColors": featuredVariants[]->{\n        "id": _id,\n        "code": variantColor->printflyReference.code,\n        "palette": variantColor->printflyReference.palette,\n        "name": variantColor->printflyReference.name\n      },\n      "priceQuotes": coalesce(priceQuotes, [])\n    },\n    callToAction[0]').concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',',\n  },\n  _type == "listsComponent" => {\n    lists,\n  },\n  _type == "logoCloudComponent" => {\n    title,\n    "images": images[]{\n      _key,\n      asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n      crop,\n      hotspot\n    },\n  },\n  _type == "homepageHeroComponent" => {\n    title,\n    subtitle,\n   "image": image{\n      asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",",\n      crop,\n      hotspot\n    },\n    callToAction [0]").concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',",\n    secondaryCallToAction [0]").concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',',\n  },\n  _type == "ctaImageComponent" => {\n    title,\n    subtitle,\n    alignment,\n    background,\n    callToAction[0]').concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',",\n    secondaryCallToAction[0]").concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',',\n    "image": image{\n      asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n      crop,\n      hotspot\n    },\n  },\n  _type == "heroComponent" => {\n    title,\n    subtitle,\n    "background": coalesce(background, \'dark\'),\n    backgroundImage,\n    callToAction[0]').concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',',\n   "image": image{\n      asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n      crop,\n      hotspot\n    },\n  },\n  _type == "codeComponent" => {\n      code,\n  },\n  _type == "ctaVideoComponent" => {\n    title,\n    subtitle,\n    alignment,\n    background,\n    callToAction[0]').concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',",\n    secondaryCallToAction[0]").concat('{\n    _type,\n    _type == \'designLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n      "item": product->linkedProduct.id,\n      "color": productVariant->variantColor->printflyReference.id,\n      "method": printMethod,\n    },\n    _type == \'internalLink\' => {\n      "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n      "href": link->pageData.slug.current,\n    },\n    _type == \'externalLink\' => {\n      "title": coalesce(title, "MISSING_TITLE"),\n      href,\n      openInNewTab,\n      noReferrer,\n      noFollow\n    },\n    _type == \'customAction\' => {\n      title,\n      action\n    },\n  }',',\n    video,\n  },\n  _type == "rootPageCollectionComponent" => {\n    title,\n    subtitle,\n    pages[]->{\n      _id,\n      "title": coalesce(pageData.altTitle, pageData.title),\n      "slug": coalesce(pageData.slug.current, \'TEMPORARY-URL\'),\n      "image": pageData.previewImage{\n        asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n        crop,\n        hotspot\n      },\n    },\n    "tableOfContentsTitle": tableOfContents.title,\n    "hiddenTableOfContentsSubcategories": tableOfContents.hiddenSubcategories[]->pageData.slug.current,\n    "tableOfContents": pages[]->{\n      "key": _id,\n      "title": pageData.altTitle,\n      "href": pageData.slug.current,\n      "subCategories": content[_type =="pageCollectionComponent"].pages[]->{\n        "key": _id,\n        "title": pageData.altTitle,\n        "href": pageData.slug.current\n      }\n    },\n    highlightedCollection{\n      show,\n      title,\n      items[]->{\n        "key": _id,\n        "title": pageData.altTitle,\n        "href": pageData.slug.current\n      }\n    }\n  },\n  _type == "productHeroComponent" => {\n    _type,\n    title,\n    subtitle,\n    showReview,\n    "template": template->printflyReference.design.current,\n    product->{\n      "id": linkedProduct.id,\n      "style": linkedProduct.style,\n      "defaultDecorationMethod": coalesce(decorationMethods[0].decorationMethod->designStudioReference, \'scr\'),\n      "variants": *[_type == "productVariant" && references(^._id) && enabled == true]').concat('{\n    "id": _id,\n    "variantColor": variantColor->printflyReference,\n    variantSizes[]{\n      "id": size->printflyReference.id,\n      "name": size->name,\n      "code": size->printflyReference.code,\n      blankPrice,\n    }\n  }',',\n    },\n    "defaultVariant": productVariant->').concat('{\n    "id": _id,\n    "variantColor": variantColor->printflyReference,\n    variantSizes[]{\n      "id": size->printflyReference.id,\n      "name": size->name,\n      "code": size->printflyReference.code,\n      blankPrice,\n    }\n  }',',\n  },\n  _type == "productSelectorHeroComponent" => {\n    _type,\n    title,\n    subtitle,\n    showReview,\n    products[]{\n      _key,\n      title,\n      subtitle,\n      product->{\n        _id,\n        "id": linkedProduct.id,\n        "style": linkedProduct.style,\n        "template": coalesce(templateId, "MISSING_TEMPLATE_ID"),\n        "priceQuotes": coalesce(priceQuotes, []),\n        "minimumQuantity": math::min(decorationMethods[].minimumQuantity),\n        "defaultDecorationMethod": coalesce(decorationMethods[0].decorationMethod->designStudioReference, \'scr\'),\n        "variants": *[_type == "productVariant" && references(^._id) && enabled == true]').concat('{\n    "id": _id,\n    "variantColor": variantColor->printflyReference,\n    variantSizes[]{\n      "id": size->printflyReference.id,\n      "name": size->name,\n      "code": size->printflyReference.code,\n      blankPrice,\n    }\n  }',",\n        productImages[]{\n          asset->").concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n          crop,\n          hotspot\n        },\n        productVideos[], \n        "thumborImageData": {\n          "front": dynamicImages.enabledFront,\n          "back": dynamicImages.enabledBack,\n          "side": dynamicImages.enabledSide,\n          "style": linkedProduct.style,\n          "template": templateId,\n          "defaultColorCode": defaultVariant->variantColor->printflyReference.code,\n        },\n      },\n      "defaultVariant": defaultVariant->').concat('{\n    "id": _id,\n    "variantColor": variantColor->printflyReference,\n    variantSizes[]{\n      "id": size->printflyReference.id,\n      "name": size->name,\n      "code": size->printflyReference.code,\n      blankPrice,\n    }\n  }',",\n    }\n  }\n}"),r="*[\n  _type in ['product', 'page', 'blogPost'] && \n  pageData.slug.current == $slug &&\n  count(coalesce(pageData.excludedSites, [])[@ == 'rush-order-tees']) == 0\n  ][0]{\n  _id,\n  _type,\n  \"globalData\": ".concat(i,',  \n  pageData{\n    slug,\n    "previewImage": previewImage{\n      asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n      crop,\n      hotspot\n    },\n    title,\n    altTitle,\n    robots,\n    description,\n    "redirect": redirect[0]{\n      _type,\n      "href": null,\n      _type == \'internalRedirect\' => {\n        "href": @->.pageData.slug.current\n      },\n      _type == \'externalRedirect\' => {\n        "href": url\n      }\n    },\n    canonical\n  },\n  _type == \'product\' => {\n      _id,\n      requiresQuote,\n      "hideQuoteCalculator": coalesce(hideQuoteCalculator, false),\n      primaryBadge,\n      secondaryBadge,\n      productPageBadge,\n      "publishedAt": coalesce(publishedAt, "MISSING_PUBLISHED_AT"),\n      description,\n      details,\n      linkedProduct,\n      productType,\n      productImages[]{\n        asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n        crop,\n        hotspot\n      },\n      productVideos[],\n      "sizeRange": ').concat('{\n    "smallest": defaultVariant->variantSizes[0].size->{\n      _id,\n      name\n    },\n    "largest": defaultVariant->variantSizes[-1].size->{\n      _id,\n      name\n    }\n  }',',\n      "minimumQuantity": math::min(decorationMethods[].minimumQuantity),\n      decorationMethods[]{\n        _key,\n        decorationMethod->{\n          "id": _id,\n          designStudioReference,\n          "title": contentPage->pageData.altTitle,\n          "description": contentPage->pageData.description,\n          "previewImage": contentPage->pageData.previewImage{\n            asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n            crop,\n            hotspot\n          }\n        },\n        minimumQuantity\n      },\n      relatedProducts[count(coalesce(@->pageData.excludedSites, [])[@ == \'rush-order-tees\']) == 0]->{\n        _id,\n        primaryBadge,\n        secondaryBadge,\n        "publishedAt": coalesce(publishedAt, "MISSING_PUBLISHED_AT"),\n        "averageScore": coalesce(productReviews.averageScore, 0),\n        "totalReviews": coalesce(productReviews.totalReviews, 0),\n        "minimumQuantity": math::min(decorationMethods[].minimumQuantity),\n        "title": coalesce(pageData.altTitle, "MISSING_PRODUCT_TITLE"),\n        "slug": pageData.slug.current,\n        "thumborImageData": {\n          "style": linkedProduct.style,\n          "template": templateId,\n          "defaultColorCode": defaultVariant->variantColor->printflyReference.code,\n        },\n        "sizeRange": ').concat('{\n    "smallest": defaultVariant->variantSizes[0].size->{\n      _id,\n      name\n    },\n    "largest": defaultVariant->variantSizes[-1].size->{\n      _id,\n      name\n    }\n  }',',\n        "priceQuotes": coalesce(priceQuotes, [])\n      },\n      "companionProducts": array::compact(companionProducts[count(coalesce(@->pageData.excludedSites, [])[@ == \'rush-order-tees\']) == 0][0...4]->{\n        _id,\n        primaryBadge,\n        secondaryBadge,\n        "publishedAt": coalesce(publishedAt, "MISSING_PUBLISHED_AT"),\n        "averageScore": coalesce(productReviews.averageScore, 0),\n        "totalReviews": coalesce(productReviews.totalReviews, 0),\n        "minimumQuantity": math::min(decorationMethods[].minimumQuantity),\n        "title": coalesce(pageData.altTitle, "MISSING_PRODUCT_TITLE"),\n        "slug": pageData.slug.current,\n        "thumborImageData": {\n          "style": linkedProduct.style,\n          "template": templateId,\n          "defaultColorCode": defaultVariant->variantColor->printflyReference.code,\n        },\n        "sizeRange": ').concat('{\n    "smallest": defaultVariant->variantSizes[0].size->{\n      _id,\n      name\n    },\n    "largest": defaultVariant->variantSizes[-1].size->{\n      _id,\n      name\n    }\n  }',',\n        "priceQuotes": coalesce(priceQuotes, [])\n      }),\n      "averageScore": coalesce(productReviews.averageScore, 0),\n      "totalReviews": coalesce(productReviews.totalReviews, 0),\n      "thumborImageData": {\n        "front": dynamicImages.enabledFront,\n        "back": dynamicImages.enabledBack,\n        "side": dynamicImages.enabledSide,\n        "style": linkedProduct.style,\n        "template": templateId,\n        "defaultColorCode": defaultVariant->variantColor->printflyReference.code,\n      },\n      "facetOptions": productFacets[]->{\n        _id,\n        title,\n        "facet": productFacet->title\n      },\n      "defaultVariant": defaultVariant->').concat('{\n    "id": _id,\n    "variantColor": variantColor->printflyReference,\n    variantSizes[]{\n      "id": size->printflyReference.id,\n      "name": size->name,\n      "code": size->printflyReference.code,\n      blankPrice,\n    }\n  }',',\n      "productVariants": *[_type == "productVariant" && ^._id == variantProduct._ref && enabled == true]').concat('{\n    "id": _id,\n    "variantColor": variantColor->printflyReference,\n    variantSizes[]{\n      "id": size->printflyReference.id,\n      "name": size->name,\n      "code": size->printflyReference.code,\n      blankPrice,\n    }\n  }',',\n      productSpecifications[]{\n        _key,\n        category,\n        sizes[]{\n          _key,\n          "name": size->name,\n          measurements[]{\n            value,\n            "name": measurement->name,\n            "id": measurement->_id,\n            "ordinal": measurement->ordinal,\n          }\n        }\n      },\n      "productSizeChart": productSizeChart{\n        asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n        crop,\n        hotspot\n      },\n      // build breadcrumbs, up to 4 levels, add more if needed\n      "breadcrumbs": {\n        "title": coalesce(pageData.altTitle, pageData.title),\n        "slug": pageData.slug.current,\n        "parent": pageData.breadcrumb->{\n          "title": coalesce(pageData.altTitle, pageData.title),\n          "slug": pageData.slug.current,\n          "parent": pageData.breadcrumb->{\n            "title": coalesce(pageData.altTitle, pageData.title),\n            "slug": pageData.slug.current,\n            "parent": pageData.breadcrumb->{\n              "title": coalesce(pageData.altTitle, pageData.title),\n              "slug": pageData.slug.current,\n              "parent": pageData.breadcrumb->{\n                "title": coalesce(pageData.altTitle, pageData.title),\n                "slug": pageData.slug.current,\n              }\n            }\n          }\n        }\n      },\n      "priceQuotes": coalesce(priceQuotes, []),\n      "brand": brand->{\n        title,\n        description,\n        image{\n          asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n          crop,\n          hotspot\n        },\n        relatedLinks[]{\n          _key,\n          "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n          "slug": coalesce(link->pageData.slug.current, "#"),\n        }\n      }\n  },\n  _type == \'page\' => {\n    // build breadcrumbs, up to 4 levels, add more if needed\n    "breadcrumbs": {\n      "title": coalesce(pageData.altTitle, pageData.title),\n      "slug": pageData.slug.current,\n      "parent": pageData.breadcrumb->{\n        "title": coalesce(pageData.altTitle, pageData.title),\n        "slug": pageData.slug.current,\n        "parent": pageData.breadcrumb->{\n          "title": coalesce(pageData.altTitle, pageData.title),\n          "slug": pageData.slug.current,\n          "parent": pageData.breadcrumb->{\n            "title": coalesce(pageData.altTitle, pageData.title),\n            "slug": pageData.slug.current,\n            "parent": pageData.breadcrumb->{\n              "title": coalesce(pageData.altTitle, pageData.title),\n              "slug": pageData.slug.current,\n            }\n          }\n        }\n      }\n    },\n    asideContent[]{\n      _type,\n      _key,\n      _type == "asideListMenu" => {\n        title,\n        "items": items[]{\n          _key,\n          "title": coalesce(title, link->pageData.altTitle, "MISSING_TITLE"),\n          "slug": coalesce(link->pageData.slug.current, \'TEMPORARY-URL\'),\n        }\n      }\n    },\n    content[]').concat(l,',\n    "experiment": pageExperiment.experiment->{\n      "pageName": optimizelyData.pageKey,\n      "id": optimizelyData.id,\n      "control": controlVariation,\n    },\n    "experimentContent": pageExperiment.content[]').concat(l,'\n  },\n  _type == \'blogPost\' => {\n    "breadcrumbs": {\n      "title": coalesce(pageData.altTitle, pageData.title),\n      "slug": pageData.slug.current,\n      "parent": {\n        "title": "Blog",\n        "slug": "/blog/",\n        "parent": null,\n      }\n    },\n    author->{\n      name,\n      biography,\n      "avatar": avatar{\n        asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",",\n        crop,\n        hotspot\n      },\n      \"slug\": coalesce(slug.current, 'author-slug-missing')\n    },\n    content[]").concat(a,",\n    category->{\n      name,\n      slug\n    },\n    publishedAt\n  }\n}"),o='{\n  "globalData": '.concat(i,',\n  "recentPosts": *[\n    _type == "blogPost"\n    ] | order(publishedAt desc)[0...2] {\n      "slug": pageData.slug.current,\n      "title": pageData.altTitle,\n      "image": pageData.previewImage{\n        asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n        crop,\n        hotspot\n      },\n      "description": pageData.description\n    },\n  "categories": *[\n    _type == "blogCategory"\n    && name != "Uncategorized"\n    ] | order(name asc){\n        name,\n        slug,\n      "recentPosts": *[\n        _type == "blogPost"\n        && references(^._id)\n      ] | order(publishedAt desc)[0...3] {\n        "slug": pageData.slug.current,\n        "title": pageData.altTitle,\n        "image": pageData.previewImage{\n          asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n          crop,\n          hotspot\n        },\n        "description": pageData.description\n      },\n    }\n}');'*[\n  _type == "blogCategory" && slug.current == $slug\n][0]{\n  name,\n  "blogPosts": *[\n    _type == "blogPost" && \n    references(^._id)\n  ] | order(_createdAt desc) {\n    "slug": pageData.slug.current,\n    "title": pageData.altTitle,\n    "image": pageData.previewImage{\n      asset->'.concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n      crop,\n      hotspot\n    },\n    "description": pageData.description,\n    "data": publishedAt\n  },\n  "globalData": ').concat(i,"\n}"),'*[\n  _type == "blogAuthor" && slug.current == $slug\n][0]{\n  name,\n  biography,\n  "avatar": avatar{\n    asset->'.concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n    crop,\n    hotspot\n  },\n  "blogPosts": *[\n    _type == "blogPost" && \n    references(^._id)\n  ] | order(publishedAt desc) {\n    "slug": pageData.slug.current,\n    "title": pageData.altTitle,\n    "image": pageData.previewImage{\n      asset->').concat("{\n    _id,\n    title,\n    altText,\n    metadata{\n        lqip\n    }\n  }",',\n      crop,\n      hotspot\n    },\n    "description": pageData.description,\n  },\n  "globalData": ').concat(i,"\n}")}}]);